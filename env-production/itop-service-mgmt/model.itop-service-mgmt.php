<?php
//
// File generated by ... on the 2024-10-22T13:54:27+0200
// Please do not edit manually
//

/**
 * Classes and menus for itop-service-mgmt (version 3.1.1)
 *
 * @author      iTop compiler
 * @license     http://opensource.org/licenses/AGPL-3.0
 */



class ContractType extends Typology
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name'),
			'db_table' => 'contracttype',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, null),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();



		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'name',
));
;
	}


}

/**
 * Persistent classes for a CMDB
 *
 * @copyright   Copyright (C) 2010-2023 Combodo SARL
 * @license     http://opensource.org/licenses/AGPL-3.0
 */
abstract class Contract extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable,structure',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'image_attcode' => '',
			'state_attcode' => 'status',
			'reconc_keys' => array('name', 'org_id', 'organization_name', 'provider_id', 'provider_name', 'finalclass'),
			'db_table' => 'contract',
			'db_key_field' => 'id',
			'db_finalclass_field' => 'finalclass',
			'style' =>  new ormStyle(null, null, null, null, null, 'itop-service-mgmt/../../images/icons/icons8-contract.svg'),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("sql"=>'name', "is_null_allowed"=>false, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("org_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'org_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("organization_name", array("extkey_attcode"=>'org_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("contacts_list", array("linked_class"=>'lnkContactToContract', "ext_key_to_me"=>'contract_id', "ext_key_to_remote"=>'contact_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("documents_list", array("linked_class"=>'lnkContractToDocument', "ext_key_to_me"=>'contract_id', "ext_key_to_remote"=>'document_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("description", array("sql"=>'description', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDate("start_date", array("sql"=>'start_date', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDate("end_date", array("sql"=>'end_date', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("cost", array("sql"=>'cost', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("cost_currency", array("allowed_values"=>new ValueSetEnum("dollars,euros" ), "display_style"=>'list', "sql"=>'cost_currency', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("contracttype_id", array("targetclass"=>'ContractType', "allowed_values"=>null, "sql"=>'contracttype_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("contracttype_name", array("extkey_attcode"=>'contracttype_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("billing_frequency", array("sql"=>'billing_frequency', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("cost_unit", array("sql"=>'cost_unit', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("provider_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'provider_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("provider_name", array("extkey_attcode"=>'provider_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("status", array("allowed_values"=>new ValueSetEnum("implementation,production,obsolete" ), "display_style"=>'list', "sql"=>'status', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));

		// States but no lifecycle declared in XML (status attribute: status)
		//
		MetaModel::Init_DefineState(
			"",
			array(
				"attribute_inherit" => '',
				"attribute_list" => array()
			)
		);
		MetaModel::Init_DefineState(
			"",
			array(
				"attribute_inherit" => '',
				"attribute_list" => array()
			)
		);
		MetaModel::Init_DefineState(
			"",
			array(
				"attribute_inherit" => '',
				"attribute_list" => array()
			)
		);


		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'contacts_list',
  3 => 'documents_list',
  4 => 'description',
  5 => 'start_date',
  6 => 'end_date',
  7 => 'cost',
  8 => 'cost_currency',
  9 => 'billing_frequency',
  10 => 'cost_unit',
  11 => 'provider_id',
  12 => 'status',
  13 => 'contracttype_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'start_date',
  3 => 'end_date',
  4 => 'cost',
  5 => 'provider_id',
  6 => 'cost_currency',
  7 => 'billing_frequency',
  8 => 'cost_unit',
  9 => 'status',
  10 => 'contracttype_id',
));
		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'provider_id',
  3 => 'status',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'name',
  1 => 'status',
  2 => 'org_id',
  3 => 'description',
  4 => 'start_date',
  5 => 'end_date',
  6 => 'cost_unit',
  7 => 'provider_id',
));
;
	}




public function PrefillSearchForm(&$aContextParam)
{
  if($aContextParam['dest_class'] == 'Service' || is_subclass_of($aContextParam['dest_class'], 'Service'))
  {
    if(MetaModel::IsValidAttCode($aContextParam['dest_class'],'org_id') && !empty($aContextParam['source_obj']->Get('provider_id')))
    {
        $aContextParam['filter']->ResetCondition();
        $aContextParam['filter']->AddCondition('org_id', $aContextParam['source_obj']->Get('provider_id'));
    }
  }
  elseif (($aContextParam['dest_class'] == 'Contact' || is_subclass_of($aContextParam['dest_class'], 'Contact'))
          || ($aContextParam['dest_class'] == 'Document' || is_subclass_of($aContextParam['dest_class'], 'Document')))
  {
    if(MetaModel::IsValidAttCode($aContextParam['dest_class'],'org_id') && !empty($aContextParam['source_obj']->Get('provider_id')) && !empty($aContextParam['source_obj']->Get('org_id')))
    {
      $aContextParam['filter']->ResetCondition();
      $aOrgIds = array( $aContextParam['source_obj']->Get('provider_id'),
                        $aContextParam['source_obj']->Get('org_id'));
      $aContextParam['filter']->AddCondition('org_id', $aOrgIds , 'IN');
    }
  }
}


}


class CustomerContract extends Contract
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'organization_name', 'provider_id', 'provider_name'),
			'db_table' => 'customercontract',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, 'itop-service-mgmt/../../images/icons/icons8-contract.svg'),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("services_list", array("linked_class"=>'lnkCustomerContractToService', "ext_key_to_me"=>'customercontract_id', "ext_key_to_remote"=>'service_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Contract:baseinfo' => 
    array (
      0 => 'name',
      1 => 'org_id',
      2 => 'provider_id',
      3 => 'contracttype_id',
      4 => 'description',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Contract:moreinfo' => 
    array (
      0 => 'status',
      1 => 'start_date',
      2 => 'end_date',
    ),
    'fieldset:Contract:cost' => 
    array (
      0 => 'cost',
      1 => 'cost_currency',
      2 => 'cost_unit',
      3 => 'billing_frequency',
    ),
  ),
  0 => 'contacts_list',
  1 => 'documents_list',
  2 => 'services_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'start_date',
  3 => 'end_date',
  4 => 'provider_id',
  5 => 'cost',
  6 => 'cost_currency',
  7 => 'billing_frequency',
  8 => 'cost_unit',
  9 => 'status',
  10 => 'contracttype_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'status',
  1 => 'org_id',
  2 => 'description',
  3 => 'start_date',
  4 => 'end_date',
  5 => 'provider_id',
));
;
	}


}


class ProviderContract extends Contract
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'organization_name', 'provider_id', 'provider_name'),
			'db_table' => 'providercontract',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, 'itop-service-mgmt/../../images/icons/icons8-contract.svg'),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("functionalcis_list", array("linked_class"=>'lnkFunctionalCIToProviderContract', "ext_key_to_me"=>'providercontract_id', "ext_key_to_remote"=>'functionalci_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("sla", array("sql"=>'sla', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("coverage", array("sql"=>'coverage', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("services_list", array("linked_class"=>'lnkProviderContractToService', "ext_key_to_me"=>'providercontract_id', "ext_key_to_remote"=>'service_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:Contract:baseinfo' => 
    array (
      0 => 'name',
      1 => 'org_id',
      2 => 'provider_id',
      3 => 'contracttype_id',
      4 => 'description',
    ),
  ),
  'col:col2' => 
  array (
    'fieldset:Contract:moreinfo' => 
    array (
      0 => 'status',
      1 => 'start_date',
      2 => 'end_date',
      3 => 'sla',
      4 => 'coverage',
    ),
    'fieldset:Contract:cost' => 
    array (
      0 => 'cost',
      1 => 'cost_currency',
      2 => 'cost_unit',
      3 => 'billing_frequency',
    ),
  ),
  0 => 'contacts_list',
  1 => 'documents_list',
  2 => 'functionalcis_list',
  3 => 'services_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'start_date',
  3 => 'end_date',
  4 => 'provider_id',
  5 => 'contracttype_id',
  6 => 'cost',
  7 => 'cost_currency',
  8 => 'billing_frequency',
  9 => 'cost_unit',
  10 => 'sla',
  11 => 'coverage',
  12 => 'status',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'status',
  1 => 'org_id',
  2 => 'description',
  3 => 'start_date',
  4 => 'end_date',
  5 => 'provider_id',
  6 => 'sla',
  7 => 'coverage',
));
;
	}


}


class lnkContactToContract extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('contact_name', 'contract_name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('contract_id', 'contact_id'),
			'db_table' => 'lnkcontacttocontract',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, null),
			'uniqueness_rules' => array (
  'no_duplicate' => 
  array (
    'attributes' => 
    array (
      0 => 'contact_id',
      1 => 'contract_id',
    ),
    'filter' => '',
    'disabled' => false,
    'is_blocking' => true,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("contract_id", array("targetclass"=>'Contract', "allowed_values"=>null, "sql"=>'contract_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("contract_name", array("extkey_attcode"=>'contract_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("customer_id", array("extkey_attcode"=>'contract_id', "target_attcode"=>'org_id', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("provider_id", array("extkey_attcode"=>'contract_id', "target_attcode"=>'provider_id', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("contact_id", array("targetclass"=>'Contact', "allowed_values"=>new ValueSetObjects("SELECT Contact WHERE org_id IN (:this->customer_id, :this->provider_id)"), "sql"=>'contact_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array('contract_id'), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("contact_name", array("extkey_attcode"=>'contact_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'contact_id',
  1 => 'contract_id',
  2 => 'customer_id',
  3 => 'provider_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'contract_id',
  1 => 'contact_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'contract_id',
  1 => 'contact_id',
));
;
	}


}


class lnkContractToDocument extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('contract_name', 'document_name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('contract_id', 'document_id'),
			'db_table' => 'lnkcontracttodocument',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, null),
			'uniqueness_rules' => array (
  'no_duplicate' => 
  array (
    'attributes' => 
    array (
      0 => 'contract_id',
      1 => 'document_id',
    ),
    'filter' => '',
    'disabled' => false,
    'is_blocking' => true,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("contract_id", array("targetclass"=>'Contract', "allowed_values"=>null, "sql"=>'contract_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("contract_name", array("extkey_attcode"=>'contract_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("customer_id", array("extkey_attcode"=>'contract_id', "target_attcode"=>'org_id', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("provider_id", array("extkey_attcode"=>'contract_id', "target_attcode"=>'provider_id', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("document_id", array("targetclass"=>'Document', "allowed_values"=>new ValueSetObjects("SELECT Document WHERE org_id IN (:this->customer_id, :this->provider_id)"), "sql"=>'document_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array('contract_id'), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("document_name", array("extkey_attcode"=>'document_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'contract_id',
  1 => 'document_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'contract_id',
  1 => 'document_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'contract_id',
  1 => 'document_id',
));
;
	}


}


class ServiceFamily extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'image_attcode' => 'icon',
			'state_attcode' => '',
			'reconc_keys' => array('name'),
			'db_table' => 'servicefamily',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, 'itop-service-mgmt/../../images/icons/icons8-service.svg'),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("sql"=>'name', "is_null_allowed"=>false, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeImage("icon", array("is_null_allowed"=>true, "display_max_width"=>96, "display_max_height"=>96, "storage_max_width"=>256, "storage_max_height"=>256, "default_image"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSet("services_list", array("linked_class"=>'Service', "ext_key_to_me"=>'servicefamily_id', "count_min"=>0, "count_max"=>0, "display_style"=>'', "edit_mode"=>LINKSET_EDITMODE_ADDONLY, "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'icon',
  2 => 'services_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
));
		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'name',
));
;
	}


}


class Service extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'complementary_name_attcode' => array('organization_name', 'status'),
			'name_attcode' => array('name'),
			'image_attcode' => 'icon',
			'state_attcode' => 'status',
			'reconc_keys' => array('name', 'org_id', 'organization_name'),
			'db_table' => 'service',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, 'itop-service-mgmt/../../images/icons/icons8-service.svg'),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("sql"=>'name', "is_null_allowed"=>false, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("org_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'org_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("organization_name", array("extkey_attcode"=>'org_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("servicefamily_id", array("targetclass"=>'ServiceFamily', "allowed_values"=>null, "sql"=>'servicefamily_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("servicefamily_name", array("extkey_attcode"=>'servicefamily_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("description", array("sql"=>'description', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("documents_list", array("linked_class"=>'lnkDocumentToService', "ext_key_to_me"=>'service_id', "ext_key_to_remote"=>'document_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("contacts_list", array("linked_class"=>'lnkContactToService', "ext_key_to_me"=>'service_id', "ext_key_to_remote"=>'contact_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("status", array("allowed_values"=>new ValueSetEnum("implementation,production,obsolete" ), "display_style"=>'list', "sql"=>'status', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeImage("icon", array("is_null_allowed"=>true, "display_max_width"=>96, "display_max_height"=>96, "storage_max_width"=>256, "storage_max_height"=>256, "default_image"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("customercontracts_list", array("linked_class"=>'lnkCustomerContractToService', "ext_key_to_me"=>'service_id', "ext_key_to_remote"=>'customercontract_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("providercontracts_list", array("linked_class"=>'lnkProviderContractToService', "ext_key_to_me"=>'service_id', "ext_key_to_remote"=>'providercontract_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("functionalcis_list", array("linked_class"=>'lnkFunctionalCIToService', "ext_key_to_me"=>'service_id', "ext_key_to_remote"=>'functionalci_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSet("servicesubcategories_list", array("linked_class"=>'ServiceSubcategory', "ext_key_to_me"=>'service_id', "count_min"=>0, "count_max"=>0, "display_style"=>'', "edit_mode"=>LINKSET_EDITMODE_ADDONLY, "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));

		// States but no lifecycle declared in XML (status attribute: status)
		//
		MetaModel::Init_DefineState(
			"",
			array(
				"attribute_inherit" => '',
				"attribute_list" => array()
			)
		);
		MetaModel::Init_DefineState(
			"",
			array(
				"attribute_inherit" => '',
				"attribute_list" => array()
			)
		);
		MetaModel::Init_DefineState(
			"",
			array(
				"attribute_inherit" => '',
				"attribute_list" => array()
			)
		);


		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'servicefamily_id',
  3 => 'description',
  4 => 'status',
  5 => 'icon',
  6 => 'servicesubcategories_list',
  7 => 'documents_list',
  8 => 'contacts_list',
  9 => 'customercontracts_list',
  10 => 'providercontracts_list',
  11 => 'functionalcis_list',
));
		MetaModel::Init_SetZListItems('summary', array (
  0 => 'org_id',
  1 => 'description',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'status',
  2 => 'org_id',
  3 => 'servicefamily_id',
  4 => 'description',
));
		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'servicefamily_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'org_id',
  1 => 'status',
  2 => 'servicefamily_id',
));
;
	}


}


class lnkDocumentToService extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('document_name', 'service_name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('service_id', 'document_id'),
			'db_table' => 'lnkdocumenttoservice',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, null),
			'uniqueness_rules' => array (
  'no_duplicate' => 
  array (
    'attributes' => 
    array (
      0 => 'document_id',
      1 => 'service_id',
    ),
    'filter' => '',
    'disabled' => false,
    'is_blocking' => true,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("service_id", array("targetclass"=>'Service', "allowed_values"=>null, "sql"=>'service_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("service_name", array("extkey_attcode"=>'service_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("document_id", array("targetclass"=>'Document', "allowed_values"=>null, "sql"=>'document_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("document_name", array("extkey_attcode"=>'document_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'document_id',
  1 => 'service_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'service_id',
  1 => 'document_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'service_id',
  1 => 'document_id',
));
;
	}


}


class lnkContactToService extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('contact_name', 'service_name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('service_id', 'contact_id'),
			'db_table' => 'lnkcontacttoservice',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, null),
			'uniqueness_rules' => array (
  'no_duplicate' => 
  array (
    'attributes' => 
    array (
      0 => 'contact_id',
      1 => 'service_id',
    ),
    'filter' => '',
    'disabled' => false,
    'is_blocking' => true,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("service_id", array("targetclass"=>'Service', "allowed_values"=>null, "sql"=>'service_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("service_name", array("extkey_attcode"=>'service_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("contact_id", array("targetclass"=>'Contact', "allowed_values"=>null, "sql"=>'contact_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("contact_name", array("extkey_attcode"=>'contact_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'contact_id',
  1 => 'service_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'service_id',
  1 => 'contact_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'service_id',
  1 => 'contact_id',
));
;
	}


}


class ServiceSubcategory extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'complementary_name_attcode' => array('service_provider', 'request_type'),
			'name_attcode' => array('name'),
			'image_attcode' => '',
			'state_attcode' => 'status',
			'reconc_keys' => array('name', 'service_id', 'service_name'),
			'db_table' => 'servicesubcategory',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, 'itop-service-mgmt/../../images/icons/icons8-service.svg'),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("sql"=>'name', "is_null_allowed"=>false, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("description", array("sql"=>'description', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("service_id", array("targetclass"=>'Service', "allowed_values"=>null, "sql"=>'service_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("service_org_id", array("extkey_attcode"=>'service_id', "target_attcode"=>'org_id', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("service_name", array("extkey_attcode"=>'service_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("service_provider", array("extkey_attcode"=>'service_id', "target_attcode"=>'organization_name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("request_type", array("allowed_values"=>new ValueSetEnum("incident,service_request" ), "display_style"=>'radio_horizontal', "sql"=>'request_type', "default_value"=>'incident', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("status", array("allowed_values"=>new ValueSetEnum("implementation,production,obsolete" ), "display_style"=>'list', "sql"=>'status', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));

		// States but no lifecycle declared in XML (status attribute: status)
		//
		MetaModel::Init_DefineState(
			"",
			array(
				"attribute_inherit" => '',
				"attribute_list" => array()
			)
		);
		MetaModel::Init_DefineState(
			"",
			array(
				"attribute_inherit" => '',
				"attribute_list" => array()
			)
		);
		MetaModel::Init_DefineState(
			"",
			array(
				"attribute_inherit" => '',
				"attribute_list" => array()
			)
		);


		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'service_id',
  2 => 'service_org_id',
  3 => 'status',
  4 => 'request_type',
  5 => 'description',
));
		MetaModel::Init_SetZListItems('summary', array (
  0 => 'service_provider',
  1 => 'request_type',
  2 => 'description',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'service_id',
  2 => 'description',
  3 => 'status',
  4 => 'request_type',
  5 => 'service_org_id',
));
		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
  1 => 'service_id',
  2 => 'service_org_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'service_id',
  1 => 'status',
  2 => 'request_type',
  3 => 'service_org_id',
));
;
	}


}


class SLA extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'organization_name'),
			'db_table' => 'sla',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, 'itop-service-mgmt/../../images/icons/icons8-adjust.svg'),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("sql"=>'name', "is_null_allowed"=>false, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("description", array("sql"=>'description', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("org_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'org_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("organization_name", array("extkey_attcode"=>'org_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("slts_list", array("linked_class"=>'lnkSLAToSLT', "ext_key_to_me"=>'sla_id', "ext_key_to_remote"=>'slt_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSet("customercontracts_list", array("linked_class"=>'lnkCustomerContractToService', "ext_key_to_me"=>'sla_id', "count_min"=>0, "count_max"=>0, "display_style"=>'', "edit_mode"=>LINKSET_EDITMODE_NONE, "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'description',
  3 => 'slts_list',
  4 => 'customercontracts_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'description',
));
		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'description',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'name',
  1 => 'org_id',
));
;
	}


}


class SLT extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'priority', 'request_type', 'metric'),
			'db_table' => 'slt',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, 'itop-service-mgmt/../../images/icons/icons8-time-limit.svg'),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("sql"=>'name', "is_null_allowed"=>false, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("priority", array("allowed_values"=>new ValueSetEnum("1,2,3,4" ), "display_style"=>'list', "sql"=>'priority', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("request_type", array("allowed_values"=>new ValueSetEnum("incident,service_request" ), "display_style"=>'list', "sql"=>'request_type', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("metric", array("allowed_values"=>new ValueSetEnum("tto,ttr" ), "display_style"=>'list', "sql"=>'metric', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeInteger("value", array("sql"=>'value', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("unit", array("allowed_values"=>new ValueSetEnum("hours,minutes" ), "display_style"=>'radio_horizontal', "sql"=>'unit', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("slas_list", array("linked_class"=>'lnkSLAToSLT', "ext_key_to_me"=>'slt_id', "ext_key_to_remote"=>'sla_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'priority',
  2 => 'request_type',
  3 => 'metric',
  4 => 'value',
  5 => 'unit',
  6 => 'slas_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'priority',
  2 => 'request_type',
  3 => 'metric',
  4 => 'value',
  5 => 'unit',
));
		MetaModel::Init_SetZListItems('default_search', array (
  0 => 'name',
  1 => 'priority',
  2 => 'request_type',
  3 => 'metric',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'priority',
  1 => 'request_type',
  2 => 'metric',
  3 => 'value',
  4 => 'unit',
));
;
	}


}


class lnkSLAToSLT extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('sla_name', 'slt_name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('sla_id', 'slt_id'),
			'db_table' => 'lnkslatoslt',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, null),
			'uniqueness_rules' => array (
  'no_duplicate' => 
  array (
    'attributes' => 
    array (
      0 => 'sla_id',
      1 => 'slt_id',
    ),
    'filter' => '',
    'disabled' => false,
    'is_blocking' => true,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("sla_id", array("targetclass"=>'SLA', "allowed_values"=>null, "sql"=>'sla_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("sla_name", array("extkey_attcode"=>'sla_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("slt_id", array("targetclass"=>'SLT', "allowed_values"=>null, "sql"=>'slt_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("slt_name", array("extkey_attcode"=>'slt_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("slt_metric", array("extkey_attcode"=>'slt_id', "target_attcode"=>'metric', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("slt_request_type", array("extkey_attcode"=>'slt_id', "target_attcode"=>'request_type', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("slt_ticket_priority", array("extkey_attcode"=>'slt_id', "target_attcode"=>'priority', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("slt_value", array("extkey_attcode"=>'slt_id', "target_attcode"=>'value', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("slt_value_unit", array("extkey_attcode"=>'slt_id', "target_attcode"=>'unit', "allowed_values"=>null, "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'sla_id',
  1 => 'slt_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'sla_id',
  1 => 'slt_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'sla_id',
  1 => 'slt_id',
  2 => 'slt_metric',
  3 => 'slt_request_type',
  4 => 'slt_ticket_priority',
  5 => 'slt_value',
  6 => 'slt_value_unit',
));
;
	}


}


class lnkCustomerContractToService extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('customercontract_name', 'service_name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('customercontract_id', 'service_id'),
			'db_table' => 'lnkcustomercontracttoservice',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, null),
			'uniqueness_rules' => array (
  'no_duplicate' => 
  array (
    'attributes' => 
    array (
      0 => 'customercontract_id',
      1 => 'service_id',
    ),
    'filter' => '',
    'disabled' => false,
    'is_blocking' => true,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("customercontract_id", array("targetclass"=>'CustomerContract', "allowed_values"=>null, "sql"=>'customercontract_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("customercontract_name", array("extkey_attcode"=>'customercontract_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("provider_id", array("extkey_attcode"=>'customercontract_id', "target_attcode"=>'provider_id', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("service_id", array("targetclass"=>'Service', "allowed_values"=>new ValueSetObjects("SELECT Service WHERE org_id = :this->provider_id"), "sql"=>'service_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array('customercontract_id'), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("service_name", array("extkey_attcode"=>'service_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("sla_id", array("targetclass"=>'SLA', "allowed_values"=>null, "sql"=>'sla_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("sla_name", array("extkey_attcode"=>'sla_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'customercontract_id',
  1 => 'service_id',
  2 => 'sla_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'customercontract_id',
  1 => 'service_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'customercontract_id',
  1 => 'service_id',
  2 => 'sla_id',
));
;
	}


}


class lnkProviderContractToService extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('providercontract_name', 'service_name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('service_id', 'providercontract_id'),
			'db_table' => 'lnkprovidercontracttoservice',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, null),
			'uniqueness_rules' => array (
  'no_duplicate' => 
  array (
    'attributes' => 
    array (
      0 => 'providercontract_id',
      1 => 'service_id',
    ),
    'filter' => '',
    'disabled' => false,
    'is_blocking' => true,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("providercontract_id", array("targetclass"=>'ProviderContract', "allowed_values"=>null, "sql"=>'providercontract_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("providercontract_name", array("extkey_attcode"=>'providercontract_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("provider_id", array("extkey_attcode"=>'providercontract_id', "target_attcode"=>'provider_id', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("service_id", array("targetclass"=>'Service', "allowed_values"=>new ValueSetObjects("SELECT Service WHERE org_id = :this->provider_id"), "sql"=>'service_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array('providercontract_id'), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("service_name", array("extkey_attcode"=>'service_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'providercontract_id',
  1 => 'service_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'service_id',
  1 => 'providercontract_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'service_id',
  1 => 'providercontract_id',
));
;
	}


}


class DeliveryModel extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('name', 'org_id', 'organization_name'),
			'db_table' => 'deliverymodel',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, 'itop-service-mgmt/../../images/icons/icons8-service.svg'),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("sql"=>'name', "is_null_allowed"=>false, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("org_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'org_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("organization_name", array("extkey_attcode"=>'org_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("description", array("sql"=>'description', "is_null_allowed"=>true, "default_value"=>'', "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("contacts_list", array("linked_class"=>'lnkDeliveryModelToContact', "ext_key_to_me"=>'deliverymodel_id', "ext_key_to_remote"=>'contact_id', "count_min"=>0, "count_max"=>0, "duplicates"=>false, "display_style"=>'', "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSet("customers_list", array("linked_class"=>'Organization', "ext_key_to_me"=>'deliverymodel_id', "count_min"=>0, "count_max"=>0, "display_style"=>'', "edit_mode"=>LINKSET_EDITMODE_ADDREMOVE, "allowed_values"=>null, "with_php_constraint"=>false, "with_php_computation"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'description',
  3 => 'contacts_list',
  4 => 'customers_list',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
  1 => 'org_id',
  2 => 'description',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'org_id',
));
;
	}


}


class lnkDeliveryModelToContact extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('deliverymodel_name', 'contact_name'),
			'image_attcode' => '',
			'state_attcode' => '',
			'reconc_keys' => array('deliverymodel_id', 'contact_id'),
			'db_table' => 'lnkdeliverymodeltocontact',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'style' =>  new ormStyle(null, null, null, null, null, null),
			'uniqueness_rules' => array (
  'no_duplicate' => 
  array (
    'attributes' => 
    array (
      0 => 'deliverymodel_id',
      1 => 'contact_id',
    ),
    'filter' => '',
    'disabled' => false,
    'is_blocking' => true,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("deliverymodel_id", array("targetclass"=>'DeliveryModel', "allowed_values"=>null, "sql"=>'deliverymodel_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("deliverymodel_name", array("extkey_attcode"=>'deliverymodel_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("contact_id", array("targetclass"=>'Contact', "allowed_values"=>null, "sql"=>'contact_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("contact_name", array("extkey_attcode"=>'contact_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("role_id", array("targetclass"=>'ContactType', "allowed_values"=>null, "sql"=>'role_id', "is_null_allowed"=>true, "on_target_delete"=>DEL_MANUAL, "display_style"=>'select', "create_temporary_object"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("role_name", array("extkey_attcode"=>'role_id', "target_attcode"=>'name', "allowed_values"=>null, "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'deliverymodel_id',
  1 => 'contact_id',
  2 => 'role_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'deliverymodel_id',
  1 => 'contact_id',
  2 => 'role_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'deliverymodel_id',
  1 => 'contact_id',
  2 => 'role_id',
));
;
	}


}
//
// Menus
//
class MenuCreation_itop_service_mgmt extends ModuleHandlerAPI
{
	public static function OnMenuCreation()
	{
		global $__comp_menus__; // ensure that the global variable is indeed global !
		$__comp_menus__['ServiceManagement'] = new MenuGroup('ServiceManagement', 60, 'fas fa-hands-helping' , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['Service:Overview'] = new DashboardMenuNode('Service:Overview', __DIR__.'/service_overview_dashboard.xml', $__comp_menus__['ServiceManagement']->GetIndex(), 0 , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['CustomerContract'] = new OQLMenuNode('CustomerContract', "SELECT CustomerContract", $__comp_menus__['ServiceManagement']->GetIndex(), 1, true , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['ProviderContract'] = new OQLMenuNode('ProviderContract', "SELECT ProviderContract", $__comp_menus__['ServiceManagement']->GetIndex(), 2, true , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['ServiceFamily'] = new OQLMenuNode('ServiceFamily', "SELECT ServiceFamily", $__comp_menus__['ServiceManagement']->GetIndex(), 3, true , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['Service'] = new OQLMenuNode('Service', "SELECT Service", $__comp_menus__['ServiceManagement']->GetIndex(), 4, true , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['ServiceSubcategory'] = new OQLMenuNode('ServiceSubcategory', "SELECT ServiceSubcategory", $__comp_menus__['ServiceManagement']->GetIndex(), 5, true , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SLA'] = new OQLMenuNode('SLA', "SELECT SLA", $__comp_menus__['ServiceManagement']->GetIndex(), 6, true , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['SLT'] = new OQLMenuNode('SLT', "SELECT SLT", $__comp_menus__['ServiceManagement']->GetIndex(), 7, true , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
		$__comp_menus__['DeliveryModel'] = new OQLMenuNode('DeliveryModel', "SELECT DeliveryModel", $__comp_menus__['ServiceManagement']->GetIndex(), 8, true , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null, true);
	}
} // class MenuCreation_itop_service_mgmt
